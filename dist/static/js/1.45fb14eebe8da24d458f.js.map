{"version":3,"sources":["webpack:///./games/sushigo/client/Sushi.vue?d12d","webpack:///./games/sushigo/common/game.js","webpack:///games/sushigo/client/card.vue","webpack:///./games/sushigo/client/card.vue?60eb","webpack:///./games/sushigo/client/card.vue?3571","webpack:///games/sushigo/client/cardView.vue","webpack:///./games/sushigo/client/cardView.vue?842e","webpack:///./games/sushigo/client/cardView.vue?754b","webpack:///games/sushigo/client/Sushi.vue","webpack:///./games/sushigo/client/Sushi.vue?e319","webpack:///./games/sushigo/client/Sushi.vue","webpack:///./games/sushigo/client/cardView.vue?753c","webpack:///./games/sushigo/client/card.vue?12d3","webpack:///./games/sushigo/common/cards.js"],"names":[],"mappings":";;;;;AAAA,yC;;;;;;;;ACAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAA+C;AAClE;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE,6DAA6D;AAC7D;AACA,8DAA8D;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,sCAAsC;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3XlB;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAZA;AAcA;;AAEA;AACA,oCADA;AAEA,iBAFA;AAGA;AACA;AACA;AACA;AACA,KAJA;AAKA;AACA;AACA;AACA;AARA,GAHA;AAaA;AACA;AACA,GAfA;AAgBA;AACA;AACA;AACA,kBADA;AAEA,0BAFA;AAGA,gCAHA;AAIA;AAJA;AAMA,KARA;AASA;AACA;AACA,kCADA;AAEA;AAFA;AAIA;AACA,KAfA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA,uCAXA,CAWA;AACA;AAAA;AACA;AACA;AAdA;AAgBA,KAlCA;AAmCA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA,oBAHA,CAGA;AACA;AACA;AAAA,oBALA,CAKA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAVA;AAYA,KAjDA;AAkDA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA,iIAHA,CAGA;AACA;AAAA,kMAJA,CAIA;AACA;AAAA,+HALA,CAKA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AATA;AAWA;;AA/DA;AAhBA,G;;AC/BA,0BAA0B,aAAa,0BAA0B,wBAAwB,iBAAiB,kBAAkB,YAAY,sDAAsD,wBAAwB,gCAAgC,yBAAyB,kEAAkE,OAAO,kBAAkB,0BAA0B,4BAA4B,sBAAsB;AACtb;AACA,iBAAiB;AACjB,yD;;ACHA;AACA,4BAAyS;AACzS;AACA;AACA;AACA;AACA;AACA;AAC8R;AAC9R;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AADA,GADA;AAIA;AACA;AACA,oBADA;AAEA;AAFA,KADA;AAKA;AACA,iBADA;AAEA,iBAFA;AAGA;AACA;AACA;AACA;AACA;AAPA,KALA;AAcA;AACA,kBADA;AAEA;AAFA;AAdA,GAJA;AAuBA,iBAvBA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA,YACA,6CACA,uCAFA,EAGA;AACA;AACA,SAPA,CAOA;AACA;AACA,OATA;AAUA;AAdA,GAxBA;AAwCA;AACA;AACA;AACA;AACA;AAJA,GAxCA;AA8CA;AACA;AACA;AAhDA,G;;AChBA,mCAA0B,aAAa,0BAA0B,wBAAwB,2BAA2B,wBAAwB,YAAY,0BAA0B,YAAY,8BAA8B,qFAAqF,mBAAmB,2BAA2B,+CAA+C,KAAK,wBAAwB,GAAG;AAC9a;AACA,0BAAiB;AACjB,sE;;ACHA;AACA,4BAAyS;AACzS;AACA;AACA;AACA;AACA;AACA;AAC8R;AAC9R;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACyDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBADA;AAEA;AACA;AADA,GAFA;AAKA;AACA;AACA,uCADA;AAEA,2CAFA;AAGA,8BAHA;AAIA,kBAJA;AAKA,0BALA;AAMA,sBANA;AAOA,kBAPA;AAQA,oBARA;AASA;AATA;AAWA,GAjBA;AAkBA;AACA;AACA;AACA;AACA;AACA,KAHA;AAIA;AACA;AACA;AACA,KAFA,MAGA;AACA;AACA;AAEA,GAhCA;AAiCA;AACA;AACA;AACA,KAHA;AAIA;AACA;AACA;AANA,GAjCA;AAyCA;AACA;AACA;AACA,KAHA;AAIA;AACA;AACA,KANA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAFA,MAEA;AACA,wCACA;AACA;AACA,OAJA,MAIA;AACA,yCACA;AACA;AACA;AACA,KAzBA;AA0BA;AACA;AACA,KA5BA;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA,8DADA,CACA;AACA;AACA;AACA,KAtCA;AAuCA;AACA;AACA;AACA;AACA,KA3CA;AA4CA;AACA;AACA;AA9CA,GAzCA;;AA0FA;AACA;AACA;AACA,KAHA;AAIA;AACA;AACA;AACA;AACA,KARA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAjBA;AAkBA;AACA;AACA,KApBA;AAqBA;AACA;AACA,KAvBA;AAwBA;AACA,qCADA,CACA;AACA;AACA,KA3BA;AA4BA;AACA;AACA,KA9BA;AA+BA;AACA;AACA,KAjCA;AAkCA;AACA;AACA;AACA,KArCA;AAsCA;AACA;AACA;AACA,KAzCA;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAHA;AAIA;AACA;AAtDA;AA1FA,G;;ACzFA,gCAA0B,aAAa,0BAA0B,wBAAwB,iBAAiB,2BAA2B,kFAAkF,iBAAiB,6CAA6C,6FAA6F,sEAAsE,uBAAuB,sBAAsB,+DAA+D,EAAE,iGAAiG,wBAAwB,sDAAsD,IAAI,yBAAyB,qBAAqB,iMAAiM,8BAA8B,sIAAsI,aAAa,8EAA8E,oCAAoC,wCAAwC,WAAW,yBAAyB,KAAK,yBAAyB,4BAA4B,QAAQ,EAAE,qCAAqC,2BAA2B,4CAA4C,yBAAyB,iBAAiB,sEAAsE,iCAAiC,uBAAuB,+FAA+F,8BAA8B,+NAA+N,iCAAiC,uBAAuB,yEAAyE,8BAA8B,mJAAmJ,kBAAkB,kDAAkD,iBAAiB,wCAAwC,kCAAkC,0BAA0B,6YAA6Y,+BAA+B,yBAAyB,8GAA8G,KAAK,4BAA4B,wBAAwB,kBAAkB,YAAY,oBAAoB,eAAe,qCAAqC,wCAAwC,KAAK,yBAAyB,iDAAiD,yBAAyB,kFAAkF,6IAA6I,oFAAoF,iLAAiL,iDAAiD,yEAAyE,sBAAsB,uBAAuB,qGAAqG,sBAAsB,mBAAmB,iGAAiG,iCAAiC,uBAAuB;AAC1uI;AACA,uBAAiB;AACjB,gE;;ACHA;AACA,4BAAyS;AACzS;AACA;AACA;AACA;AACA;AACA;AAC8R;AAC9R;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC1BA,yC;;;;;;;ACAA,yC;;;;;;;ACAA;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;;AAGA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA,4C;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,uBAAuB;AACxC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,iBAAiB,uBAAuB;AACxC;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,iBAAiB,0CAA0C;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;;AAEzB,aAAa,QAAQ;;AAErB,aAAa,QAAQ;;AAErB,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,OAAO;;AAEpB,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,OAAO;;AAEpB,aAAa,QAAQ;;AAErB,aAAa,OAAO;;AAEpB,aAAa,OAAO;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;;AAEvB;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;;AAEA,kBAAkB,6D","file":"static/js/1.45fb14eebe8da24d458f.js","sourcesContent":["// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-40752b5d\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./games/sushigo/client/Sushi.vue\n// module id = 1XYC\n// module chunks = 1","\"use strict\";\r\n\r\nvar Random = require(\"random-js\");\r\nvar CardLib = require(\"./cards\");\r\nvar GetDeck = CardLib.GetDeck;\r\nvar ScoreCards = CardLib.ScoreCards;\r\nvar Card = CardLib.Card;\r\n\r\nclass Game {\r\n  constructor(seed) {\r\n    this.players = [];\r\n    this.round = 0;\r\n    this.playerHands = [];\r\n    this.playersReady = [];\r\n    this.playerRoundDeck = []; //the cards the player has put aside\r\n    this.playerGameDeck = [];\r\n    this.isPlaying = false;\r\n    this.playerScores = [];\r\n    this.lastRound = [];\r\n    this.gameOver = false;\r\n    if (seed == undefined) seed = 25;\r\n    this.deckSeed = seed;\r\n    this.turnNumber = 0;\r\n  }\r\n\r\n  SyncGame(game) {\r\n    this.round = game.round;\r\n    this.deckSeed = game.deckSeed;\r\n    this.gameOver = game.gameOver;\r\n    this.isPlaying = game.isPlaying;\r\n    this.players = game.players;\r\n    this.playerHands = game.playerHands;\r\n    this.playerScores = game.playerScores;\r\n    this.playersReady = game.playersReady;\r\n    this.playerRoundDeck = game.playerRoundDeck;\r\n    this.playerGameDeck = game.playerGameDeck;\r\n    this.turnNumber = game.turnNumber;\r\n  }\r\n\r\n  StartRound() {\r\n    this.playerRoundDeck = [];\r\n    this.playersReady = [];\r\n    for (var i = 0; i < this.players.length; i++) {\r\n      this.playerRoundDeck.push([]);\r\n      this.playersReady.push(false);\r\n    }\r\n\r\n    this.SetDeck();\r\n\r\n    this.round++;\r\n  }\r\n\r\n  RoundScores() {\r\n    return ScoreCards(this.playerRoundDeck);\r\n  }\r\n\r\n  EndRound() {\r\n    console.log(\"Round \" + this.round + \" is over\");\r\n\r\n    //figure out scores\r\n\r\n    for (var i = 0; i < this.players.length; i++) {\r\n      //make sure we keep our cards like pudding\r\n      //console.log(this.playerRoundDeck[i]);\r\n      var keepCards = this.playerRoundDeck[i].filter(\r\n        value => value.discarded == false\r\n      );\r\n      //console.log(keepCards);\r\n\r\n      this.playerGameDeck[i] = this.playerGameDeck[i].concat(keepCards);\r\n    }\r\n\r\n    var scores = ScoreCards(this.playerRoundDeck);\r\n    console.log(\r\n      \"This is the reason for the scores\",\r\n      CardLib.GetLastScoreReasons()\r\n    );\r\n    for (var i = 0; i < this.players.length && i <= scores.length; i++) {\r\n      this.playerScores[i] += scores[i];\r\n    }\r\n\r\n    this.lastRound = this.playerRoundDeck;\r\n\r\n    if (this.round == 3) {\r\n      this.gameOver = true;\r\n      this.isPlaying = false;\r\n      return;\r\n    }\r\n    this.deckSeed += 7;\r\n    this.StartRound();\r\n  }\r\n\r\n  //this can set the deck to be used for this round\r\n  SetDeck() {\r\n    //split the deck up by the number of players\r\n    //in 2 player game 10 cards per player\r\n    //3 player 9 cards\r\n    //4 player = 8 cards\r\n    //5 player = 7 cards\r\n    //5+ = 7 cards\r\n    var deck = GetDeck();\r\n    //console.log(deck);\r\n\r\n    var mt = Random.engines.mt19937();\r\n    if (this.deckSeed == undefined) {\r\n      mt = mt.autoSeed();\r\n      console.log(\"Using autoseed\");\r\n    } else mt = mt.seed(this.deckSeed);\r\n    Random.shuffle(mt, deck);\r\n    //console.log(\"after shuffle\", deck);\r\n    //take the number of cards needed\r\n    var numPlayers = this.players.length;\r\n    var cardsPerPlayer = 12 - numPlayers;\r\n    if (cardsPerPlayer > 10) cardsPerPlayer = 10;\r\n    if (cardsPerPlayer < 7) cardsPerPlayer = 7;\r\n\r\n    var numCards = numPlayers * cardsPerPlayer;\r\n\r\n    deck = deck.slice(0, numCards);\r\n    this.playerHands = [];\r\n    //sort the deck out to the players\r\n    for (var i = 0; i < numPlayers; i++) {\r\n      this.playerHands.push(deck.splice(0, cardsPerPlayer));\r\n    }\r\n\r\n    //console.log(\"hopefully no cards left\", deck);\r\n  }\r\n\r\n  AddPlayer(name) {\r\n    if (this.isPlaying || this.gameOver) return false;\r\n    if (this.players.indexOf(name) != -1) return false;\r\n    this.players.push(name);\r\n  }\r\n\r\n  AddAI() {\r\n    var name = \"[AI]\";\r\n    var possibleNames = [\"Billy\", \"Jean\", \"Bobby\", \"Stella\", \"Paul\"];\r\n    var mt = Random.engines.mt19937();\r\n    if (this.deckSeed == undefined) {\r\n      mt = mt.autoSeed();\r\n      console.log(\"Using autoseed\");\r\n    } else mt = mt.seed(this.deckSeed);\r\n    Random.shuffle(mt, possibleNames);\r\n\r\n    name += possibleNames[this.players.length % possibleNames.length];\r\n    if (!this.AddPlayer(name)) return false;\r\n  }\r\n\r\n  //what would happen if you gave these cards to these players\r\n  CalculatePotentialScore(cards, playerIndex) {\r\n    var allPlayerDecks = this.playerRoundDeck.slice(); //create a copy\r\n    var newDeck = allPlayerDecks[playerIndex].slice();\r\n    allPlayerDecks[playerIndex] = newDeck.concat(cards);\r\n    return ScoreCards(allPlayerDecks);\r\n  }\r\n\r\n  /**\r\n   * Calculates the moves for the AI - returns an array of moves\r\n   */\r\n  CalculateAIMoves(playerIndex) {\r\n    //default behavior is to pick the first card they have\r\n    var hand = this.playerHands[playerIndex].slice();\r\n    var currentCards = this.playerRoundDeck[playerIndex].slice();\r\n    var nextPlayer =\r\n      playerIndex == 0 ? this.players.length - 1 : playerIndex - 1; //this is the player we are handing our cards to next\r\n    var prevPlayer = (playerIndex + 1) % this.players.length; //this is the player we are getting cards from\r\n    var nextPlayerCards = this.playerRoundDeck[nextPlayer].slice();\r\n    var prevPlayerHand = this.playerHands[prevPlayer].slice(); //this could potentially be the same as next player\r\n\r\n    var baseScores = ScoreCards(this.playerRoundDeck);\r\n    //figure out a score for each card in your hand\r\n    var scoredCards = hand.map((x, index) => {\r\n      var help = 0;\r\n      var hurt = 0;\r\n      var value = 0;\r\n      if (x.type == \"chopsticks\") {\r\n        value = hand.length;\r\n      } else {\r\n        //we get the card that we care about\r\n        var self = this;\r\n        var maxScores = prevPlayerHand.map(newCard => {\r\n          var newScores = self.CalculatePotentialScore(\r\n            [x, newCard],\r\n            playerIndex\r\n          );\r\n          //console.log(x.type+\" and \"+newCard.type+\" = \"+newScores[playerIndex]);\r\n          return newScores[playerIndex];\r\n        });\r\n        //TODO figure out scarcity as well - this would help cards like wasabi to boost their score\r\n        //console.log(\"Max scores for \"+x.type+x.value,maxScores);\r\n        var maxScore = maxScores.reduce(\r\n          (prev, curr) => (prev < curr ? curr : prev),\r\n          0\r\n        );\r\n        var scarcity = this.playerHands.reduce((acc, hand) => {\r\n          return (\r\n            acc +\r\n            hand.reduce((acc, card) => {\r\n              if (card.type == x.type) return acc + 1;\r\n              return acc;\r\n            }, 0)\r\n          );\r\n        }, 0);\r\n        var totalCards = hand.length * this.playerHands.length;\r\n        var newScores = this.CalculatePotentialScore([x], playerIndex);\r\n        help = newScores[playerIndex] - baseScores[playerIndex];\r\n        var potential = maxScore - help - baseScores[playerIndex];\r\n        console.log(\r\n          \"For \" +\r\n            x.type +\r\n            x.value +\r\n            \" we get \" +\r\n            help +\r\n            \" but could get \" +\r\n            potential\r\n        );\r\n        //TODO: figure out how to make it pick wasabi, pudding, and chopsticks more\r\n        newScores = this.CalculatePotentialScore([x], nextPlayer);\r\n        hurt = newScores[nextPlayer] - baseScores[nextPlayer];\r\n        value = help + hurt * 0.5 + potential * 0.75;\r\n      }\r\n      return [index, value, x.type, help + \"/\" + hurt];\r\n    });\r\n    //console.log(\"Scored hand\", scoredCards);\r\n    var highestCards = scoredCards.sort((a, b) => {\r\n      if (a[1] == b[1]) return 0;\r\n      if (a[1] < b[1]) return 1;\r\n      return -1;\r\n    });\r\n    console.log(\"sorted scored hand\", highestCards);\r\n    var pickedCards = [];\r\n    if (this.HasChopsticks(playerIndex)) {\r\n      //get the top two cards\r\n      console.log(\"Using Chopsticks for AI\" + playerIndex);\r\n      pickedCards = highestCards.slice(0, 2);\r\n    } else {\r\n      //get the top card\r\n      pickedCards = highestCards.slice(0, 1);\r\n    }\r\n    //remove the value\r\n    return pickedCards.map(x => x[0]); //get the index part of it\r\n  }\r\n\r\n  //this starts the game\r\n  StartGame() {\r\n    if (this.players.length <= 1) return false;\r\n    if (this.isPlaying || this.gameOver) return false;\r\n    this.isPlaying = true;\r\n    this.turnNumber = 1;\r\n    //set all the scores to zero\r\n    for (var i = 0; i < this.players.length; i++) {\r\n      this.playerScores.push(0);\r\n      this.playerRoundDeck.push([]);\r\n      this.playerGameDeck.push([]);\r\n    }\r\n\r\n    this.StartRound();\r\n  }\r\n\r\n  //determines whether a player has chopsticks\r\n  HasChopsticks(playerIndex) {\r\n    var chopStickCards = this.playerRoundDeck[playerIndex].filter(\r\n      x => x.type == \"chopsticks\"\r\n    );\r\n    //console.log(\"Chopstick cards\",chopStickCards,this.playerRoundDeck[playerIndex]);\r\n    return chopStickCards.length > 0;\r\n  }\r\n\r\n  //set aside the card of a player\r\n  SetAsideCard(playerIndex, cardIndexs) {\r\n    //called by the server?\r\n    //check if they have a chopsticks in their roundDeck\r\n\r\n    //console.log(\"Drawing card at\" + cardIndexs + \" for player \" + playerIndex);\r\n    if (\r\n      cardIndexs == undefined ||\r\n      this.isPlaying == false ||\r\n      this.gameOver == true ||\r\n      this.players.length <= playerIndex ||\r\n      cardIndexs.length >= 3 ||\r\n      (cardIndexs.length == 2 && !this.HasChopsticks(playerIndex))\r\n    ) {\r\n      //console.error(\"Invalid parameter\");\r\n      return false;\r\n    }\r\n\r\n    //check to make sure we can play\r\n    if (this.playersReady[playerIndex] == true) {\r\n      //if we don't have a chopsticks to use\r\n      console.error(\"You have already grabbed a card player#\" + playerIndex);\r\n      return false;\r\n    }\r\n    //check to make sure they haven't already played\r\n\r\n    //get the card I need\r\n    if (cardIndexs.length > 2) {\r\n      console.log(\"I can't handle multiple chopsticks\");\r\n      return false;\r\n    } else if (cardIndexs.length == 2) {\r\n      //handle the chopsticks case\r\n      var pulledCards = this.playerHands[playerIndex].filter((x, index) => {\r\n        return cardIndexs.indexOf(index) != -1;\r\n      });\r\n      this.playerHands[playerIndex] = this.playerHands[playerIndex].filter(\r\n        (x, index) => {\r\n          return cardIndexs.indexOf(index) == -1;\r\n        }\r\n      );\r\n      //take out the chopstick\r\n      var chopstickCards = this.playerRoundDeck[playerIndex]\r\n        .map((x, index) => {\r\n          x.index = index;\r\n          return x;\r\n        })\r\n        .filter(x => x.type == \"chopsticks\")\r\n        .map(x => x.index);\r\n      //get the chopstick we used\r\n      var usedChopstick = this.playerRoundDeck[playerIndex].splice(\r\n        chopstickCards[0],\r\n        1\r\n      );\r\n      var self = this;\r\n      usedChopstick.forEach(element => {\r\n        self.playerHands[playerIndex].push(element);\r\n      });\r\n      //add the cards we pulled earlier\r\n      pulledCards.forEach(element => {\r\n        self.playerRoundDeck[playerIndex].push(element);\r\n      });\r\n    } else {\r\n      var cardIndex = cardIndexs[0];\r\n      var card = this.playerHands[playerIndex][cardIndex];\r\n      this.playerRoundDeck[playerIndex].push(card);\r\n      this.playerHands[playerIndex].splice(cardIndex, 1);\r\n      //console.log(\"Setting aside for player \" + playerIndex, card);\r\n    }\r\n\r\n    this.playersReady[playerIndex] = true;\r\n\r\n    if (this.HasEveryonePlayed()) {\r\n      //console.log(\"Everyone has played!\");\r\n      this.EndTurn();\r\n    }\r\n    return true;\r\n  }\r\n\r\n  HasEveryonePlayed() {\r\n    return this.playersReady.reduce(function(prev, current) {\r\n      return current && prev;\r\n    }, true);\r\n  }\r\n\r\n  GetHandCardCount() {\r\n    //console.log(this.playerHands);\r\n    return this.playerHands.map(value => value.length);\r\n  }\r\n\r\n  EndTurn() {\r\n    //the server is the only one that calls this function\r\n    //check to make sure all the cards have been set aside\r\n    //all player's hands have been set aside\r\n    //swap the hands until finished\r\n    //set aside the hands\r\n    this.playersReady = [];\r\n    for (var i = 0; i < this.players.length; i++) {\r\n      this.playersReady.push(false);\r\n    }\r\n\r\n    var hand = this.playerHands.splice(0, 1);\r\n    this.playerHands.push(hand[0]);\r\n\r\n    //todo check if there are cards left\r\n    var handCounts = this.GetHandCardCount();\r\n\r\n    var maxHandCount = handCounts.reduce(function(prev, curr) {\r\n      return prev < curr ? curr : prev;\r\n    }, 0);\r\n\r\n    this.turnNumber++;\r\n\r\n    if (maxHandCount <= 1) {\r\n      for (var i = 0; i < this.playerHands.length; i++) {\r\n        this.playerRoundDeck[i].push(this.playerHands[i].pop());\r\n      }\r\n      //console.log(this.playerRoundDeck);\r\n      //console.log(this.playerHands);\r\n      this.EndRound();\r\n      //TODO: put the last cards into the player's deck round\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = { Game };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./games/sushigo/common/game.js\n// module id = CHo/\n// module chunks = 1","<template>\r\n    <div  v-bind:class=\"classes\" >\r\n        <div class=\"card-header\" @click=\"PickedCard\" v-bind:style=\"headerStyle\">\r\n          <span v-if=\"card.value>0\" class=\"card-value\">{{card.value}}</span>\r\n          <img v-bind:src=\"imgSrc\"/>\r\n        </div>\r\n        <div class=\"card-body\" @click=\"CardInfo\">\r\n          {{card.name}} <small>{{hint}}</small>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Vue from \"vue\";\r\nfunction GetCardColor(card){\r\n  switch(card.type){\r\n    case \"sashimi\": return \"linear-gradient(to bottom, #bdd100 0%,#a3c441 100%)\";\r\n    case \"nigiri\": return \"linear-gradient(to bottom, #fabf0b 0%,#fbcc0c 100%)\";\r\n    case \"maki\": return \"linear-gradient(to bottom, #bd402c 0%,#d83f35 100%)\";\r\n    case \"dumpling\": return \"linear-gradient(to bottom, #6e83bc 0%,#7693cd 100%)\";\r\n    case \"chopsticks\": return \"linear-gradient(to bottom, #94cfc9 0%,#74c8ca 100%)\";\r\n    case \"tempura\": return \"linear-gradient(to bottom, #b67fc2 0%,#9779c1 100%)\";\r\n    case \"pudding\": return \"linear-gradient(to bottom, #f0c2c2 0%,#f2b7bd 100%)\";\r\n    case \"wasabi\": return \"linear-gradient(to bottom, #fec900 0%,#ffbd1e 100%)\";\r\n    default: {\r\n      console.error(\"Unknown card type\",card.type);\r\n      return \"linear-gradient(to bottom, #fec900 0%,#ffbd1e 100%)\";\r\n    }\r\n  }\r\n}\r\n\r\nexport default {\r\n  props: [\"card\", \"picked\", \"index\"],\r\n  name: \"Sushies\",\r\n  methods: {\r\n    PickedCard() {\r\n      console.log(\"Picked card from card\");\r\n      this.$emit(\"click\", this.index);\r\n    },\r\n    CardInfo() {\r\n      console.log(\"Info wanted for card from card\");\r\n      this.$emit(\"card-info\", this.index);\r\n    }\r\n  },\r\n  data() {\r\n    return {};\r\n  },\r\n  computed: {\r\n    classes() {\r\n      return {\r\n        card: true,\r\n        \"sushi-card\": true,\r\n        picked: this.card.picked,\r\n        picked2: this.picked\r\n      };\r\n    },\r\n    headerStyle(){\r\n      var style = {\r\n        \"background-color\":\"blue\",\r\n        \"background\":GetCardColor(this.card),\r\n      };\r\n      return style;\r\n    },\r\n    imgSrc(){\r\n      if (this.card == undefined || this.card.type == undefined) return \"N/A\";\r\n      switch(this.card.type){\r\n        case \"nigiri\": \r\n          if (this.card.value == 1) return \"/static/egg_nigiri.png\";\r\n          if (this.card.value == 2) return \"/static/nigiri.png\";\r\n          if (this.card.value == 3) return \"/static/squid_nigiri.png\";\r\n        case \"pudding\": return \"/static/pudding.png\";\r\n        case \"maki\": return \"/static/maki.png\";\r\n        case \"tempura\": return \"/static/tempura.png\";\r\n        case \"wasabi\": return \"/static/wasabi.png\";\r\n        case \"chopsticks\": return \"/static/chopsticks.png\";\r\n        case \"dumpling\": return \"/static/dumpling.png\";\r\n        case \"sashimi\": return \"/static/sashimi.png\"; //redo with face that's happier?\r\n        default: {\r\n          return \"/static/default_sushi.png\";\r\n        }\r\n      }\r\n    },\r\n    hint(){\r\n      if (this.card == undefined || this.card.type == undefined) return \"N/A\";\r\n      switch(this.card.type){\r\n        case \"sashimi\": return \"x3=10\";\r\n        //case \"nigiri\": return this.card.value;\r\n        case \"maki\": return \"\"; //most 6/3\r\n        //case \"dumpling\": return \"\"; //1 3 5 10 15\r\n        case \"chopsticks\": return \"\"; //end most=6, least= -6\r\n        case \"tempura\": return \"x2=5\";\r\n        //case \"pudding\": return \"\";//pick 2\r\n        default: {\r\n          return \"\";\r\n        }\r\n      }\r\n    },\r\n    longHint() {\r\n      if (this.card == undefined || this.card.type == undefined) return \"N/A\";\r\n      switch(this.card.type){\r\n        case \"sashimi\": return \"Get 3 to get 10 points\";\r\n        case \"nigiri\": return \"Worth the value listed on the card\";\r\n        case \"maki\": return \"Whoever has the most at the end of the round gets 6 points, and the person with the second most gets 3 points\"; //most 6/3\r\n        case \"dumpling\": return \"Depending on the number you get this round, you get 1, 3, 5, 10, or 15 points for 1 dumpling, 2 dumplings, and so on. There is no limit to the number of dumplings you can get\"; //\r\n        case \"chopsticks\": return \"You take the chopsticks and next round you are allowed to take two cards at once, loudly declaring Sushi Go\"; //end most=6, least= -6\r\n        case \"tempura\": return \"For every pair of Tempura, you get 5 points\";\r\n        case \"wasabi\": return \"The next nigiri card you pick up after this wasabi card is worth 3x\"\r\n        case \"pudding\": return \"Pudding points are counted at the end of the game. Whoever has the most gets 6 points, whoever has the least gets -6\";\r\n        default: return \"\";        \r\n      }\r\n    }\r\n   \r\n  }\r\n};\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n.sushi-card {\r\n  font-size: 11pt;\r\n  padding-left: 0;\r\n  padding-right: 0;\r\n  width: 75pt;\r\n  margin-right:2pt;\r\n  height: 100pt;\r\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\r\n  transition: 0.3s;\r\n  display:inline-block;\r\n  background-color:#888;\r\n}\r\n.sushi-card:hover {\r\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.sushi-card .card-header {\r\n  height:75pt;\r\n  padding:0;\r\n  position: relative;\r\n}\r\n.sushi-card .card-header img{\r\n  width:100%;\r\n  position: absolute;\r\n  bottom:0;\r\n  right:0;\r\n  left:0;\r\n}\r\n.sushi-card .card-header .card-value{\r\n  position: absolute;\r\n  top:2pt;\r\n  right:2pt;\r\n}\r\n.sushi-card .card-body {  \r\n  padding:0;\r\n  padding-left:1pt;\r\n  padding-right:1pt;\r\n  color:white;\r\n}\r\n.sushi-card.picked {\r\n  border-color: rgba(255, 0, 0, 0.5);\r\n  border-width: 2pt;\r\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// games/sushigo/client/card.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.classes},[_c('div',{staticClass:\"card-header\",style:(_vm.headerStyle),on:{\"click\":_vm.PickedCard}},[(_vm.card.value>0)?_c('span',{staticClass:\"card-value\"},[_vm._v(_vm._s(_vm.card.value))]):_vm._e(),_vm._v(\" \"),_c('img',{attrs:{\"src\":_vm.imgSrc}})]),_vm._v(\" \"),_c('div',{staticClass:\"card-body\",on:{\"click\":_vm.CardInfo}},[_vm._v(\"\\n      \"+_vm._s(_vm.card.name)+\" \"),_c('small',[_vm._v(_vm._s(_vm.hint))])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-737ef0f0\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./games/sushigo/client/card.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-737ef0f0\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./card.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./card.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./card.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-737ef0f0\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./card.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-737ef0f0\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./games/sushigo/client/card.vue\n// module id = null\n// module chunks = ","<template>\r\n    <div>\r\n        \r\n        <div class=\"card-view\">          \r\n          <div class=\"card-viewer\">\r\n            <div class=\"card-view-title\">{{title}}</div>\r\n            <template v-for=\"(card,index) in allCards\">\r\n                <card v-bind:card=\"card\" v-bind:index=\"index\" @click=\"PickedCard\" v-bind:picked=\"card.picked\" v-bind:key=\"card.name+index\"></card>\r\n            </template>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport Card from \"./card\";\r\nimport Vue from \"vue\";\r\nexport default {\r\n  components: {\r\n    Card\r\n  },\r\n  props: {\r\n    cards: {\r\n      required: true,\r\n      type: Array\r\n    },\r\n    cardsSetAside: {\r\n      default: [],\r\n      type: Array,\r\n      validator: function(value) {\r\n        if (typeof value == \"undefined\") return false;\r\n        if (typeof value != \"array\") return false;\r\n        return false;\r\n      }\r\n    },\r\n    title: {\r\n      type: String,\r\n      default: \"\"\r\n    }\r\n  },\r\n  name: \"Sushies\",\r\n  computed: {\r\n    allCards() {\r\n      var self = this;\r\n      if (this.cards == undefined) return [];\r\n      return this.cards.map((x, index) => {\r\n        x.picked = false;\r\n        if (\r\n          typeof self.cardsSetAside !== \"undefined\" &&\r\n          self.cardsSetAside.indexOf(index) != -1\r\n        ) {\r\n          x.picked = true;\r\n        }// else console.log(typeof self.cardsSetAside, self.cardsSetAside);\r\n        return x;\r\n      });\r\n    }\r\n  },\r\n  methods: {\r\n    PickedCard(index) {\r\n      this.$emit(\"picked-card\", index);\r\n      console.log(\"Picked card from card view\");\r\n    }\r\n  },\r\n  data() {\r\n    return {};\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.card-view-title {\r\n  -webkit-transform: rotate(90deg);\r\n  -moz-transform: rotate(90deg);\r\n  -o-transform: rotate(90deg);\r\n  -ms-transform: rotate(90deg);\r\n  transform: rotate(90deg);\r\n  position: absolute;\r\n  transform-origin: left top; \r\n  top:10pt;\r\n}\r\n.card-view {\r\n  overflow-x: auto;\r\n  overflow-y: hidden;\r\n  width: 100%;\r\n  height: 105pt;\r\n}\r\n.card-viewer {\r\n  width: max-content;\r\n  padding-left:20pt;\r\n  position: relative;\r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// games/sushigo/client/cardView.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"card-view\"},[_c('div',{staticClass:\"card-viewer\"},[_c('div',{staticClass:\"card-view-title\"},[_vm._v(_vm._s(_vm.title))]),_vm._v(\" \"),_vm._l((_vm.allCards),function(card,index){return [_c('card',{key:card.name+index,attrs:{\"card\":card,\"index\":index,\"picked\":card.picked},on:{\"click\":_vm.PickedCard}})]})],2)])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-48a03a9e\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./games/sushigo/client/cardView.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-48a03a9e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./cardView.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./cardView.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./cardView.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-48a03a9e\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./cardView.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-48a03a9e\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./games/sushigo/client/cardView.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div class=\"game-content\">\r\n    <div v-if=\"!isPhone\">\r\n      <div class=\"panel\" v-for=\"(player, playerIndex) in game.players\"  v-bind:key=\"'player'+playerIndex\">\r\n        <h3> {{player}} {{game.playersReady[playerIndex]}} </h3>\r\n        </div>\r\n      <card-view v-for=\"(playerName,playerID) in game.players\" v-bind:key=\"playerName\" v-bind:cards=\"game.playerRoundDeck[playerID]\" v-bind:title=\"playerName\"></card-view>\r\n      Scores: {{game.playerScores}}\r\n      <hr/>\r\n      <pre class=\"hidden-lg\">{{game}}</pre>\r\n      <button @click=\"isPhone = true\">Play as a player</button>\r\n    </div>\r\n\r\n    <div v-else-if=\"!isLandscape\">\r\n      <h2>Please turn your phone sideways.\r\n    </div>\r\n    \r\n    <div class=\"container-fluid\" v-else-if=\"isPhone && playerID == -1 && !game.isPlaying\">\r\n      <h2>Sushi GO!</h2>\r\n      <hr/>\r\n      <h3>Please Input Your Name</h3>\r\n      <input type=\"text\" class=\"form-control\" placeholder=\"Your name\" v-model=\"playerName\" />\r\n      <button @click=\"JoinGame()\" class=\"btn btn-success btn-block\">Join Game</button>\r\n      <br/>\r\n      <button @click=\"LeaveGame\" class=\"btn btn-danger\">Leave Game</button>    \r\n    </div>\r\n    <div class=\"container-fluid\" v-else-if=\"isPhone && playerID == -1 && game.isPlaying\">\r\n      <h2>Sushi GO!</h2>\r\n      <hr/>\r\n      <h3>This game is in progress. I'm working on being able to rejoin games but I'm not there yet</h3>\r\n      <br/>\r\n      <button @click=\"LeaveGame\" class=\"btn btn-danger\">Leave Game</button>    \r\n    </div>\r\n    <div class=\"container-fluid\" v-else-if=\"isPhone && playerID != -1\">\r\n      <div>Player {{playerID}} Round {{game.round}}</div>      \r\n      \r\n      <div v-if=\"game.isPlaying == true\">\r\n        <div class=\"row\">\r\n          <div class=\"col-sm\" v-for=\"(player, index) in game.players\"  v-bind:key=\"'player'+index\" >\r\n              <i class=\"fas fa-user\" v-if=\"index == playerID\"> </i> {{player}} \r\n              <span v-if=\"game.playersReady.length >= index\">{{game.playersReady[index]}}</span> \r\n              <span v-if=\"game.playerScores.length >= index\">{{game.playerScores[index]}}</span>\r\n              <span v-if=\"game.playerScores.length >= index\">{{roundScores[index]}}</span>\r\n          </div>\r\n        </div>\r\n        <card-view @picked-card=\"PickCard\" v-bind:cards=\"game.playerHands[playerID]\" v-bind:cards-set-aside=\"pickedCard\" id=\"player-hand\" title=\"Hand\" class=\"row\"></card-view>\r\n        <div class=\"row\">\r\n          <div class=\"col-1\"><button @click=\"ReadyToPick\" class=\"btn btn-success\" v-bind:disabled=\"cardsSetAside.length > 0\">Play</button></div>\r\n          <card-view v-bind:cards=\"game.playerRoundDeck[playerID]\" id=\"player-deck\" title=\"Deck\" class=\"col\"></card-view>\r\n        </div>\r\n        \r\n      </div>\r\n      <div v-else-if=\"game.gameOver\">\r\n        <!-- if the game is over -->\r\n        <h2>Game over!</h2>\r\n        <ul>\r\n          <li v-for=\"(player,index) in game.players\"> {{player}} {{game.scores[index]}} </li>\r\n        </ul>\r\n      </div>\r\n      <div v-else>\r\n        <!-- if the game hasn't started yet -->\r\n        <p>Waiting for the game to start</p>\r\n        <p>Players waiting:</p>\r\n        <ul>\r\n          <li v-for=\"player in game.players\"> {{player}} </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <button v-if=\"!game.isPlaying && playerID == 0\" @click=\"StartGame\" class=\"btn\">StartGame</button>\r\n      <button v-if=\"!game.isPlaying && playerID == 0\" @click=\"AddAI\" class=\"btn\">Add AI</button>\r\n      <!--button @click=\"ReadyToPick\" class=\"btn\" v-bind:disabled=\"cardsSetAside.length > 0\">Play</button-->\r\n      <br/>\r\n      <hr/>\r\n      <button @click=\"LeaveGame\" class=\"btn btn-danger\">Leave Game</button>    \r\n      \r\n    </div>\r\n    <div v-else>\r\n      Unknown state\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Game } from \"../common/game\";\r\nimport Vue from \"vue\";\r\nimport CardView from \"./cardView\";\r\nimport VueSocketio from \"vue-socket.io\";\r\nVue.use(VueSocketio, window.location.origin);\r\nconsole.log(\"Connecting to \" + window.location.origin);\r\nexport default {\r\n  name: \"Sushies\",\r\n  components: {\r\n    CardView\r\n  },\r\n  data() {\r\n    return {\r\n      isPhone: window.innerWidth <= 750,\r\n      isLandscape: window.innerWidth >= 450,\r\n      game: new Game(),\r\n      playerID: -1,\r\n      cardsSetAside: false,\r\n      connected: false,\r\n      gameRoom:  \"\",\r\n      pickedCard: [],\r\n      playerName: \"\"\r\n    };\r\n  },\r\n  created: function() {\r\n    var self = this;\r\n    $(window).on(\"resize\", function() {\r\n      self.isPhone = window.innerWidth <= 750;\r\n      self.isLandscape = window.innerWidth >= 450;\r\n    });\r\n    this.gameRoom = this.$route.params.gameID || \"\";\r\n    if (!self.isPhone) {\r\n      this.JoinGame(this.gameRoom,\"\");\r\n    }\r\n    else {\r\n      //screen.orientation.lock('landscape');\r\n    }\r\n    \r\n  },\r\n  computed: {\r\n    isLandscape: function() {\r\n      return window.innerWidth > 450;\r\n    },\r\n    roundScores: function() {\r\n      return this.game.RoundScores();\r\n    }\r\n  },\r\n  methods: {\r\n    ResetGame: function() {\r\n      this.$socket.emit(\"reset sushi game\",this.gameRoom);\r\n    },\r\n    StartGame: function() {\r\n      this.$socket.emit(\"start sushi game\");\r\n    },\r\n    PickCard: function(index) {\r\n      if (this.cardsSetAside){\r\n        console.error(\"Client can't change their answer\");\r\n         return;\r\n      }\r\n      console.log(\"Client is picking card #\" + index);\r\n      var currentPickedIndex = this.pickedCard.indexOf(index);\r\n      if (currentPickedIndex != -1) {\r\n        this.pickedCard.splice(currentPickedIndex, 1);\r\n      } else if (this.game.HasChopsticks(this.playerID)) {\r\n        if (this.pickedCard.length > 1)\r\n          this.pickedCard.splice(0, this.pickedCard.length);\r\n        this.pickedCard.push(index);\r\n      } else {\r\n        if (this.pickedCard.length >= 1)\r\n          this.pickedCard.splice(0, this.pickedCard.length);\r\n        this.pickedCard.push(index);\r\n      }\r\n    },\r\n    AddAI: function() {\r\n      this.$socket.emit(\"add sushi ai\");\r\n    },\r\n    ReadyToPick: function(index) {\r\n      if (this.cardsSetAside){\r\n        console.error(\"Client can't resend their answer!\");\r\n         return;\r\n      }\r\n      if (this.pickedCard.length > 0) {\r\n        this.$socket.emit(\"pick sushi card\", this.pickedCard); //TODO: maybe send the round/turn number so the server doesn't double count\r\n        this.cardsSetAside = true;\r\n      }\r\n    },\r\n    JoinGame: function(gameRoom, playerName) {\r\n      if (gameRoom == undefined) gameRoom = this.gameRoom;\r\n      if (playerName == undefined) playerName = this.playerName;\r\n      this.$socket.emit(\"join sushi game\",  gameRoom, playerName);\r\n    },\r\n    LeaveGame: function() {\r\n      this.$router.push(\"/sushi\");\r\n    }\r\n  },\r\n\r\n  sockets: {\r\n    connect : function() {\r\n      this.$socket.emit(\"sushi:connect\");\r\n    },\r\n    \"sushi:connected\": function() {\r\n      console.log(\"socket connected\");\r\n      this.connected = true;\r\n      if (!this.isPhone) this.$socket.emit(\"sync sushi game\", this.gameRoom);\r\n    },\r\n    \"sync sushi game\": function(newGame) {\r\n      console.log(\"We got a new state for the sushi game\", newGame);\r\n      if (newGame == null) {\r\n        console.error(\"This is a bad game state\");\r\n        return;\r\n      }\r\n      this.game.SyncGame(newGame);\r\n      this.$set(this.game, \"playerHands\", newGame.playerHands);\r\n    },\r\n    \"set players\": function(newPlayer) {\r\n      this.$set(this.game, \"players\", newPlayer);\r\n    },\r\n    \"start game\": function() {\r\n      this.game.StartGame();\r\n    },\r\n    \"reset game\": function() {\r\n      this.game = new Game(); //might need a vue.set here\r\n      this.playerID = -1;\r\n    },\r\n    \"set deck seed\": function(seed) {\r\n      this.game.deckSeed = seed;\r\n    },\r\n    \"error message\": function(message) {\r\n      alert(message);\r\n    },\r\n    \"set sushi player\": function(id) {\r\n      this.playerID = id;\r\n      console.log(\"We are player #\" + id);\r\n    },\r\n    \"pick sushi card\": function(playerID) {\r\n      console.log(\"Player \" + playerID + \" is ready!\");\r\n      Vue.set(this.game.playersReady, playerID, true);\r\n    },\r\n    \"pick sushi cards\": function(cardIDs) {\r\n      console.log(\"All players have played!\", cardIDs);\r\n      this.cardsSetAside = false;\r\n      this.pickedCard.splice(0, this.pickedCard.length);\r\n      var self = this;\r\n      //set everyone to not ready\r\n      this.game.playersReady = self.game.playersReady.map(x => false);\r\n      cardIDs.forEach((element, index) => {\r\n        console.log(\"Setting aside cards for player \" + index, element);\r\n        self.game.SetAsideCard(index, element);\r\n      });\r\n      //this.game.SetAsideCard(playerID, cardID);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// games/sushigo/client/Sushi.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"game-content\"},[(!_vm.isPhone)?_c('div',[_vm._l((_vm.game.players),function(player,playerIndex){return _c('div',{key:'player'+playerIndex,staticClass:\"panel\"},[_c('h3',[_vm._v(\" \"+_vm._s(player)+\" \"+_vm._s(_vm.game.playersReady[playerIndex])+\" \")])])}),_vm._v(\" \"),_vm._l((_vm.game.players),function(playerName,playerID){return _c('card-view',{key:playerName,attrs:{\"cards\":_vm.game.playerRoundDeck[playerID],\"title\":playerName}})}),_vm._v(\"\\n    Scores: \"+_vm._s(_vm.game.playerScores)+\"\\n    \"),_c('hr'),_vm._v(\" \"),_c('pre',{staticClass:\"hidden-lg\"},[_vm._v(_vm._s(_vm.game))]),_vm._v(\" \"),_c('button',{on:{\"click\":function($event){_vm.isPhone = true}}},[_vm._v(\"Play as a player\")])],2):(!_vm.isLandscape)?_c('div',[_c('h2',[_vm._v(\"Please turn your phone sideways.\\n  \")])]):(_vm.isPhone && _vm.playerID == -1 && !_vm.game.isPlaying)?_c('div',{staticClass:\"container-fluid\"},[_c('h2',[_vm._v(\"Sushi GO!\")]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_c('h3',[_vm._v(\"Please Input Your Name\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.playerName),expression:\"playerName\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"placeholder\":\"Your name\"},domProps:{\"value\":(_vm.playerName)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.playerName=$event.target.value}}}),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-success btn-block\",on:{\"click\":function($event){_vm.JoinGame()}}},[_vm._v(\"Join Game\")]),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-danger\",on:{\"click\":_vm.LeaveGame}},[_vm._v(\"Leave Game\")])]):(_vm.isPhone && _vm.playerID == -1 && _vm.game.isPlaying)?_c('div',{staticClass:\"container-fluid\"},[_c('h2',[_vm._v(\"Sushi GO!\")]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_c('h3',[_vm._v(\"This game is in progress. I'm working on being able to rejoin games but I'm not there yet\")]),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-danger\",on:{\"click\":_vm.LeaveGame}},[_vm._v(\"Leave Game\")])]):(_vm.isPhone && _vm.playerID != -1)?_c('div',{staticClass:\"container-fluid\"},[_c('div',[_vm._v(\"Player \"+_vm._s(_vm.playerID)+\" Round \"+_vm._s(_vm.game.round))]),_vm._v(\" \"),(_vm.game.isPlaying == true)?_c('div',[_c('div',{staticClass:\"row\"},_vm._l((_vm.game.players),function(player,index){return _c('div',{key:'player'+index,staticClass:\"col-sm\"},[(index == _vm.playerID)?_c('i',{staticClass:\"fas fa-user\"}):_vm._e(),_vm._v(\" \"+_vm._s(player)+\" \\n            \"),(_vm.game.playersReady.length >= index)?_c('span',[_vm._v(_vm._s(_vm.game.playersReady[index]))]):_vm._e(),_vm._v(\" \"),(_vm.game.playerScores.length >= index)?_c('span',[_vm._v(_vm._s(_vm.game.playerScores[index]))]):_vm._e(),_vm._v(\" \"),(_vm.game.playerScores.length >= index)?_c('span',[_vm._v(_vm._s(_vm.roundScores[index]))]):_vm._e()])})),_vm._v(\" \"),_c('card-view',{staticClass:\"row\",attrs:{\"cards\":_vm.game.playerHands[_vm.playerID],\"cards-set-aside\":_vm.pickedCard,\"id\":\"player-hand\",\"title\":\"Hand\"},on:{\"picked-card\":_vm.PickCard}}),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-1\"},[_c('button',{staticClass:\"btn btn-success\",attrs:{\"disabled\":_vm.cardsSetAside.length > 0},on:{\"click\":_vm.ReadyToPick}},[_vm._v(\"Play\")])]),_vm._v(\" \"),_c('card-view',{staticClass:\"col\",attrs:{\"cards\":_vm.game.playerRoundDeck[_vm.playerID],\"id\":\"player-deck\",\"title\":\"Deck\"}})],1)],1):(_vm.game.gameOver)?_c('div',[_c('h2',[_vm._v(\"Game over!\")]),_vm._v(\" \"),_c('ul',_vm._l((_vm.game.players),function(player,index){return _c('li',[_vm._v(\" \"+_vm._s(player)+\" \"+_vm._s(_vm.game.scores[index])+\" \")])}))]):_c('div',[_c('p',[_vm._v(\"Waiting for the game to start\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Players waiting:\")]),_vm._v(\" \"),_c('ul',_vm._l((_vm.game.players),function(player){return _c('li',[_vm._v(\" \"+_vm._s(player)+\" \")])}))]),_vm._v(\" \"),(!_vm.game.isPlaying && _vm.playerID == 0)?_c('button',{staticClass:\"btn\",on:{\"click\":_vm.StartGame}},[_vm._v(\"StartGame\")]):_vm._e(),_vm._v(\" \"),(!_vm.game.isPlaying && _vm.playerID == 0)?_c('button',{staticClass:\"btn\",on:{\"click\":_vm.AddAI}},[_vm._v(\"Add AI\")]):_vm._e(),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-danger\",on:{\"click\":_vm.LeaveGame}},[_vm._v(\"Leave Game\")])]):_c('div',[_vm._v(\"\\n    Unknown state\\n  \")])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-40752b5d\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./games/sushigo/client/Sushi.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-40752b5d\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Sushi.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Sushi.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Sushi.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-40752b5d\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Sushi.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-40752b5d\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./games/sushigo/client/Sushi.vue\n// module id = null\n// module chunks = ","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-48a03a9e\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./games/sushigo/client/cardView.vue\n// module id = bbKo\n// module chunks = 1","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-737ef0f0\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./games/sushigo/client/card.vue\n// module id = sxet\n// module chunks = 1","function EmptyScore(size) {\r\n  var scores = [];\r\n  for (var i = 0; i < size; i++) scores.push(0);\r\n  return scores;\r\n}\r\n\r\nfunction FilterHands(hands, card) {\r\n  return hands.map(function(hand) {\r\n    return hand.filter(function(c) {\r\n      if (c == null) console.error(\"This is a bad card\",c,hands);\r\n      return c.type == card;\r\n    });\r\n  });\r\n}\r\n\r\nfunction ScoreNigiri(hands) {\r\n  var scores = hands.map(function(hand) {\r\n    hand = hand.filter(x => x.type == \"nigiri\" || x.type == \"wasabi\");\r\n    //figure out what the points are worth\r\n    var multiplier = false;\r\n    var score = 0;\r\n    for (var i = 0; i < hand.length; i++) {\r\n      if (hand[i].type == \"wasabi\") multiplier = true;\r\n      else {\r\n        if (multiplier) {\r\n          score += hand[i].value * 3;\r\n        } else {\r\n          score += hand[i].value;\r\n        }\r\n        multiplier = false;\r\n      }\r\n    }\r\n    return score;\r\n    \r\n    \r\n  });\r\n  //console.log(\"Nigiri\",scores);\r\n  return scores;\r\n}\r\n\r\nfunction ScoreSashimi(hands) {\r\n  var sashimiCards = FilterHands(hands, \"sashimi\");\r\n  var countPerPlayer = sashimiCards.map(hand => hand.length);\r\n  var scores = countPerPlayer.map(function(value) {\r\n    return Math.floor(value/3) * 10;\r\n  });\r\n  //console.log(\"Sashimi:\", scores);\r\n  return scores;\r\n}\r\n\r\nfunction ScoreDumplings(hands) {\r\n  var dumplingCards = FilterHands(hands, \"dumpling\");\r\n\r\n  var countPerPlayer = dumplingCards.map(hand => hand.length);\r\n\r\n  var pointValues = [0, 1, 3, 6, 10, 15, 16, 18, 21, 25, 30];\r\n\r\n  var scores = countPerPlayer.map(function(value) {\r\n    return pointValues[value];\r\n  });\r\n\r\n  //console.log(\"Dumplings\", scores);\r\n\r\n  return scores;\r\n}\r\n\r\nfunction ScoreMaki(hands) {\r\n  //figure out which player has the most maki cards\r\n  var makiCards = FilterHands(hands,\"maki\");    \r\n  var makiValues = makiCards.map(function(hand) {\r\n    return hand.reduce(function(prev, curr) {\r\n      return prev + curr.value;\r\n    }, 0);\r\n  });\r\n  //TODO remove all the maki cards\r\n  var maxMaki = 0;\r\n  var secondHighest = 0;\r\n  var maxCount = 0;\r\n  var secondCount = 0;\r\n\r\n  for (var i = 0; i < makiValues.length; i++) {\r\n    if (makiValues[i] > maxMaki) {\r\n      maxMaki = makiValues[i];\r\n      maxCount = 1;\r\n    } else if (makiValues[i] == maxMaki) {\r\n      maxCount++;\r\n    }\r\n  }\r\n  //get the second highest maki hand\r\n  for (var i = 0; i < makiValues.length; i++) {\r\n    if (makiValues[i] >= maxMaki) {\r\n      continue;\r\n    } else if (makiValues[i] > secondHighest) {\r\n      secondHighest = makiValues[i];\r\n      secondCount = 1;\r\n    } else if (makiValues[i] == secondHighest) {\r\n      secondCount++;\r\n    }\r\n  }\r\n\r\n  /*console.log(\r\n    \"Scores \" +\r\n      makiValues.join(\",\") +\r\n      \"\\tMax:\" +\r\n      maxMaki +\r\n      \" second:\" +\r\n      secondHighest +\r\n      \"\\tMax count:\" +\r\n      maxCount +\r\n      \" second count:\" +\r\n      secondCount\r\n  );*/\r\n\r\n  if (maxCount > 1) secondCount = 0;\r\n\r\n  var highestPointsAwarded = Math.floor(6 / maxCount);\r\n  var secondHighPointsAwarded =\r\n    secondCount != 0 ? Math.floor(3 / secondCount) : 0;\r\n\r\n  if (maxMaki == 0) highestPointsAwarded = 0;\r\n  if (secondHighest == 0) secondHighPointsAwarded = 0;\r\n\r\n  var scores = makiValues.map(function(value) {\r\n    if (value == maxMaki) return highestPointsAwarded;\r\n    if (value == secondHighest) return secondHighPointsAwarded;\r\n    return 0;\r\n  });\r\n\r\n  return scores;\r\n}\r\n\r\nfunction ScoreTempura(hands) {\r\n  var tempuraCards = FilterHands(hands, \"tempura\");\r\n  var scores = tempuraCards.map((x)=> Math.floor(x.length/2) * 5);\r\n  //console.log(\"ALL TEMPURA\", tempuraCards);\r\n  return scores;\r\n}\r\n\r\nvar lastScoreReasons = {};\r\n\r\nfunction GetLastScoreReasons(){\r\n  //TODO massage the data a little\r\n  var data = [];\r\n  for (scoreCategory in lastScoreReasons){\r\n    lastScoreReasons[scoreCategory].forEach((score,index)=>{\r\n      if (data[index] == undefined) data[index] = {};\r\n      if (score == 0) return;\r\n      data[index][scoreCategory] = score;\r\n    });\r\n  }\r\n  return data;\r\n}\r\nfunction ScoreCards(hands) {\r\n  if (hands == undefined) return \"ERROR\";\r\n  //figure out the list of cards\r\n  var scorers = [ScoreMaki, ScoreTempura, ScoreSashimi, ScoreDumplings,ScoreNigiri];\r\n  var scores = EmptyScore(hands.length);\r\n  lastScoreReasons = {};\r\n  scorers.forEach(calculator => {    \r\n    var result = calculator(hands);\r\n    scores = AddScores(scores, result);\r\n    lastScoreReasons[calculator.name] = result;\r\n  });\r\n  return scores;\r\n}\r\n\r\nfunction AddScores(score, newScore) {\r\n  //console.log(newScore);\r\n  for (var i = 0; i < score.length && i <= newScore.length; i++) {\r\n    score[i] += newScore[i];\r\n  }\r\n  return score;\r\n}\r\n//get the whole deck\r\nfunction GetDeck() {\r\n  //14 tempura\r\n  //14x sashimi\r\n  //14x dumplings\r\n  //12x 2 maki\r\n  //8x 3 maki rolls\r\n  //6x 1 maki roll\r\n  //10x salmon nigiri\r\n  //5x squid nigir\r\n  //5x egg nigiri\r\n  //10x pudding\r\n  //6x wasabi\r\n  //4x chopsticks\r\n  var deck = [];\r\n  for (var i = 0; i < 14; i++) deck.push(new Card(\"Tempura\"));\r\n\r\n  for (i = 0; i < 14; i++) deck.push(new Card(\"Sashimi\"));\r\n\r\n  for (i = 0; i < 14; i++) deck.push(new Card(\"Dumpling\"));\r\n\r\n  for (i = 0; i < 12; i++) deck.push(new Card(\"Maki\", 2));\r\n  for (i = 0; i < 8; i++) deck.push(new Card(\"Maki\", 3));\r\n  for (i = 0; i < 6; i++) deck.push(new Card(\"Maki\", 1));\r\n\r\n  for (i = 0; i < 10; i++) deck.push(new Card(\"Salmon Nigiri\", 2, \"nigiri\"));\r\n  for (i = 0; i < 5; i++) deck.push(new Card(\"Squid Nigiri\", 3, \"nigiri\"));\r\n  for (i = 0; i < 5; i++) deck.push(new Card(\"Egg Nigiri\", 1, \"nigiri\"));\r\n\r\n  for (i = 0; i < 10; i++) deck.push(new Card(\"Pudding\", false));\r\n\r\n  for (i = 0; i < 6; i++) deck.push(new Card(\"Wasabi\"));\r\n\r\n  for (i = 0; i < 4; i++) deck.push(new Card(\"Chopsticks\"));\r\n\r\n  //Tempaki = most gets 4 pts, least gets -4 if multiple, it splits\r\n  //Uramaki = first player to get 10 gets 8 points, next gets 5, next gets 2\r\n  //Edamame = 1 pt per player who has one\r\n  //Eel - 1 eel = -3, 2+ eel = 7\r\n  //Onigiri - unique shapes\r\n  //Miso - if more than one miso is played in one turn, it will discarded\r\n  //Tofu - 1 = 2, 2 = 6, 3+ = 0\r\n  //Green tea ice cream -dessert\r\n  //fruit - dessert\r\n\r\n  return deck;\r\n}\r\n\r\n//at the end a game, \r\nfunction ScoreGame(hands){\r\n  return EmptyScore(hands);\r\n}\r\n\r\nclass Card {\r\n  constructor(name, value, type) {\r\n    this.name = name;\r\n    if (type == undefined) type = name;\r\n    this.type = type.toLowerCase();\r\n    if (value == undefined) value = 0;\r\n    this.value = value; //this can be an array - means you need multiple of this card to do this\r\n\r\n    //if the value is false we don't discard it at the end of the game\r\n    if (value === false)\r\n      this.discarded = false; //if it's only calculated at the end  of the game\r\n    else this.discarded = true;\r\n  }\r\n  //TODO define modular arch for defining how the different cards interact and how to calculate points\r\n}\r\n\r\nmodule.exports = { ScoreCards, GetDeck, Card, ScoreGame, GetLastScoreReasons };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./games/sushigo/common/cards.js\n// module id = vSBm\n// module chunks = 1"],"sourceRoot":""}